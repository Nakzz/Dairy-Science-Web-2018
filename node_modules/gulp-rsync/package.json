{
  "_args": [
    [
      {
        "raw": "https://github.com/stcruy/gulp-rsync.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/stcruy/gulp-rsync.git",
        "spec": "git+https://github.com/stcruy/gulp-rsync.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:stcruy/gulp-rsync.git",
          "sshUrl": "git+ssh://git@github.com/stcruy/gulp-rsync.git",
          "httpsUrl": "git+https://github.com/stcruy/gulp-rsync.git",
          "gitUrl": "git://github.com/stcruy/gulp-rsync.git",
          "shortcut": "github:stcruy/gulp-rsync",
          "directUrl": "https://raw.githubusercontent.com/stcruy/gulp-rsync/master/package.json"
        }
      },
      "C:\\xampp\\htdocs\\Dairy\\New-Website"
    ]
  ],
  "_from": "git+https://github.com/stcruy/gulp-rsync.git",
  "_id": "gulp-rsync@0.0.5",
  "_inCache": true,
  "_location": "/gulp-rsync",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.3",
    "isarray": "0.0.1",
    "string_decoder": "0.10.31",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "https://github.com/stcruy/gulp-rsync.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/stcruy/gulp-rsync.git",
    "spec": "git+https://github.com/stcruy/gulp-rsync.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:stcruy/gulp-rsync.git",
      "sshUrl": "git+ssh://git@github.com/stcruy/gulp-rsync.git",
      "httpsUrl": "git+https://github.com/stcruy/gulp-rsync.git",
      "gitUrl": "git://github.com/stcruy/gulp-rsync.git",
      "shortcut": "github:stcruy/gulp-rsync",
      "directUrl": "https://raw.githubusercontent.com/stcruy/gulp-rsync/master/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "git+https://github.com/stcruy/gulp-rsync.git#43580ac6a0d3576d34b8f8f38149fa885cc3d6e1",
  "_shasum": "07bc440915ed35e3ea75df2dc2f8d2199b732434",
  "_shrinkwrap": null,
  "_spec": "https://github.com/stcruy/gulp-rsync.git",
  "_where": "C:\\xampp\\htdocs\\Dairy\\New-Website",
  "author": {
    "name": "Jerry Su",
    "email": "email@jerrysu.me"
  },
  "bugs": {
    "url": "https://github.com/jerrysu/gulp-rsync/issues"
  },
  "dependencies": {
    "better-assert": "^1.0.1",
    "gulp-util": "^3.0.0",
    "lodash.every": "^2.4.1",
    "lodash.isstring": "^2.4.1",
    "through2": "^0.6.1"
  },
  "description": "Rsync tasks for deploying gulp file structures",
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.21.4"
  },
  "gitHead": "43580ac6a0d3576d34b8f8f38149fa885cc3d6e1",
  "homepage": "https://github.com/jerrysu/gulp-rsync",
  "keywords": [
    "gulpplugin",
    "rsync",
    "ssh",
    "deploy",
    "deployment"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "gulp-rsync",
  "optionalDependencies": {},
  "readme": "## gulp-rsync\r\n\r\nUse the file transferring and syncing capabilities of rsync within your Gulp task.\r\n\r\n### Prerequisites\r\n\r\nrsync needs to be installed on your machine.\r\n\r\n### Installation\r\n\r\n```\r\nnpm install gulp-rsync --save-dev\r\n```\r\n\r\n### Usage\r\n\r\n```js\r\nvar gulp = require('gulp');\r\nvar rsync = require('gulp-rsync');\r\n\r\ngulp.task('deploy', function() {\r\n  gulp.src('build/**')\r\n    .pipe(rsync({\r\n      root: 'build',\r\n      hostname: 'example.com',\r\n      destination: '/path/to/site'\r\n    }));\r\n});\r\n```\r\n\r\n### API\r\n\r\n#### `rsync(options)`\r\n\r\n##### `options`\r\n\r\n###### `destination`\r\n\r\nType: `string`, **Required**\r\n\r\nThe destination path. Use `hostname` when using a remote path.\r\n\r\n###### `root`\r\n\r\nType: `string`, Default: `process.cwd()`\r\n\r\nSpecifying a root path changes the path names that are transferred to the\r\ndestination. The paths piped into rsync must be within the root path (or the\r\nplugin will yell at you).\r\n\r\n```js\r\ngulp.src('build/js/**']).pipe(rsync({destination: '/tmp'});\r\n```\r\n\r\nThis will create the directory `build` in `/tmp` as well as the directory `js`\r\nin `/tmp/build`.\r\n\r\n```js\r\ngulp.src('build/js/**']).pipe(rsync({root: 'build', destination: '/tmp'});\r\n```\r\n\r\nThis will create the directory `js` in `/tmp`.\r\n\r\n###### `hostname`\r\n\r\nType: `string`\r\n\r\nThe hostname of the destination. rsync will connect to this hostname using SSH\r\nalong with configuration in `~/.ssh/config` or SSH keys stored in a keychain.\r\n\r\nWhen this is omitted, rsync will transfer the content to a local path.\r\n\r\n###### `username`\r\n\r\nType: `string`\r\n\r\nUsed to specify a user for the remote host.\r\n\r\n###### `shell`\r\n\r\nType: `string`\r\n\r\nTypically, rsync is configured to use `ssh` by default, but you may prefer to\r\nuse `rsh` on a local network.\r\n\r\n###### `port`\r\n\r\nType: `integer`\r\n\r\nUsed to specify an SSH port for the remote host. Note: This will override the\r\nshell option and force the use of `ssh`.\r\n\r\n###### `incremental`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nIf set to `true`, rsync will make incremental updates only. rsync will use the\r\nchecksum of every file to determine whether a file needs to be updated. This\r\nwill add a delay to the transfer, but will minimize the amount of files\r\ntransferred each time.\r\n\r\n###### `progress`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nIf set to `true`, the transfer progress for each file will be displayed in the\r\nconsole.\r\n\r\nThis looks like:\r\n\r\n```\r\n[20:49:53] gulp-rsync: Starting rsync to example.com:/var/www/example.com/html/...\r\n[20:49:53] gulp-rsync: favicon.ico \r\n[20:49:53] gulp-rsync:         1150 100%  439.45kB/s    0:00:00 (xfer#1, to-check=12/13) \r\n[20:49:53] gulp-rsync: index.html \r\n[20:49:53] gulp-rsync:         2712 100%  101.86kB/s    0:00:00 (xfer#2, to-check=11/13) \r\n[20:49:53] gulp-rsync: css/style.1afca52f.css \r\n[20:49:53] gulp-rsync:         1445 100%   54.27kB/s    0:00:00 (xfer#3, to-check=9/13) \r\n[20:49:53] gulp-rsync: images/photo1.82515393.jpg \r\n[20:49:53] gulp-rsync:        31878 100%    1.09MB/s    0:00:00 (xfer#7, to-check=3/13) \r\n[20:49:53] gulp-rsync: images/photo2.2a41e1e3.jpg \r\n[20:49:53] gulp-rsync:        76988 100%    2.53MB/s    0:00:00 (xfer#9, to-check=1/13) \r\n[20:49:53] gulp-rsync:  \r\n[20:49:53] gulp-rsync: sent 2401 bytes  received 2820 bytes  10442.00 bytes/sec \r\n[20:49:53] gulp-rsync: total size is 114173  speedup is 57.01 \r\n[20:49:53] gulp-rsync: Completed rsync.\r\n```\r\n\r\n###### `relative`\r\n\r\nType: `boolean`, Default: `true`\r\n\r\nBy default, gulp-rsync will transfer all paths relative to the `root` specified.\r\nIf you want to transfer assets from multiple paths to a single destination, you\r\ncan set `relative` to `false`.\r\n\r\n```js\r\ngulp.src(['build/js/**/*.js', 'build/css/**/*.css', 'build/images/**'])\r\n  .pipe(rsync({\r\n    hostname: 'example.cdn',\r\n    destination: '/path/to/all/assets',\r\n    relative: false\r\n  });\r\n```\r\n\r\nThis will transfer all assets (*.js, *.css, and images) into a single directory.\r\n\r\n###### `emptyDirectories`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nIf set to `true`, rsync will create empty directories.\r\n\r\n###### `times`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nPreserves times of the transferred files.\r\n\r\n###### `compress`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nCompresses file data during transfer.\r\n\r\n###### `recursive`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nIf set to `true`, rsync will transfer all files and subdirectories recursively.\r\nThis is not necessary when using glob(s) with `gulp.src()`. However, it can be\r\ncombined with non-globbed paths to transfer all files:\r\n\r\n```\r\ngulp.src(['build/js', 'build/css', 'build/images'])\r\n  .pipe(rsync({\r\n    root: 'build',\r\n    destination: '/tmp',\r\n    recursive: true\r\n  });\r\n```\r\n\r\nThis is the same as:\r\n\r\n```\r\ngulp.src(['build/js/**', 'build/css/**', 'build/images/**'])\r\n  .pipe(rsync({\r\n    root: 'build',\r\n    destination: '/tmp'\r\n  });\r\n```\r\n\r\nThe difference is that the actual `rsync` command used in the first example is\r\nmuch shorter.\r\n\r\n###### clean\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nThis must be used with `recursive` set to `true`. If set to `true`, this\r\ninstructs rsync to delete all files and directories that are not in the source\r\npaths. **Be careful with this option as it could lead to data loss.**\r\n\r\n###### `exclude`\r\n\r\nType: `string|Array<string>`\r\n\r\nEnables files or directories matching the pattern(s) provided to be excluded\r\nfrom the transfer. This is probably most useful when `recursive` is set to\r\n`true` since it is typically better to make these exclusions in `gulp.src()`.\r\n\r\n###### `include`\r\n\r\nType: `string|Array<string>`\r\n\r\nUsed with `exclude`. This adds exceptions for the exclusions.\r\n\r\nFor example:\r\n\r\n```\r\ngulp.src('build')\r\n  .pipe(rsync({\r\n    root: 'build',\r\n    destination: '/tmp',\r\n    recursive: true,\r\n    exclude: ['*.css', '*.js'],\r\n    include: ['*.min.css', '*.min.js']\r\n  });\r\n```\r\n\r\nThis will transfer only minified CSS and JS files.\r\n\r\n###### `update`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nSkip files that are newer on the receiving end.\r\n\r\n###### `silent`\r\n\r\nType: `boolean`, Default: `false`\r\n\r\nTurns off logging.\r\n\r\n#### License\r\n\r\n> The MIT License (MIT)\r\n>\r\n> Copyright © 2014 Jerry Su, http://jerrysu.me\r\n>\r\n> Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n> this software and associated documentation files (the “Software”), to deal in\r\n> the Software without restriction, including without limitation the rights to\r\n> use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n> the Software, and to permit persons to whom the Software is furnished to do so,\r\n> subject to the following conditions:\r\n>\r\n> The above copyright notice and this permission notice shall be included in all\r\n> copies or substantial portions of the Software.\r\n>\r\n> THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n> FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n> COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n> IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n> CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jerrysu/gulp-rsync.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.0.5"
}
